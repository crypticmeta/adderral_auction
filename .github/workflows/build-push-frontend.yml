# Purpose: CI to build and push the frontend Docker image to GitHub Container Registry (GHCR)
# Triggers: push to main (and tags), or changes under frontend/
# Output: ghcr.io/<owner>/addrellauction-frontend:latest, ghcr.io/<owner>/addrellauction-frontend:<sha|branch|semver>

name: "Build and Push Frontend Image"

on:
  push:
    branches: [ main ]
    tags: [ 'v*.*.*' ]
    paths:
      - 'frontend/**'
      - '.github/workflows/build-push-frontend.yml'
  workflow_dispatch: {}

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  # Descriptive image repo name (lowercase)
  IMAGE_NAME: addrellauction-frontend
  CONTEXT_DIR: frontend
  DOCKERFILE: frontend/Dockerfile
  # Public URLs baked into the client at build time (override in repo/Org envs)
  NEXT_PUBLIC_API_URL: https://api-auction.coderixx.com
  NEXT_PUBLIC_WS_URL: wss://api-auction.coderixx.com

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Compute registry and repository
        id: vars
        run: |
          OWNER_LC=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          echo "owner_lc=$OWNER_LC" >> $GITHUB_OUTPUT
          echo "image=${{ env.REGISTRY }}/$OWNER_LC/${{ env.IMAGE_NAME }}" >> $GITHUB_OUTPUT

      - name: Docker meta (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.vars.outputs.image }}
          tags: |
            type=sha,format=short
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ${{ env.CONTEXT_DIR }}
          file: ${{ env.DOCKERFILE }}
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ steps.vars.outputs.image }}:buildcache
          cache-to: type=registry,ref=${{ steps.vars.outputs.image }}:buildcache,mode=max
          build-args: |
            NEXT_PUBLIC_API_URL=${{ env.NEXT_PUBLIC_API_URL }}
            NEXT_PUBLIC_WS_URL=${{ env.NEXT_PUBLIC_WS_URL }}
